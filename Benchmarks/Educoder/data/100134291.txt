package case8;

public class TestPolymorphism {
	public static void main(String[] args) {
		// 以多态方式分别实例化子类对象并调用eat()方法
		/********* begin *********/
         show(new Dog()); 
         show(new Cat()); // 以 Cat 对象调用 show 方法
        show(new Lion());// 以 Dog 对象调用 show 方法
        Animal a = new Dog(); // 向上转型 
    }
    public static void show(Animal a) {
        // 类型判断
        a.eat();
        //if (a instanceof Cat) { // 狗做的事情
            //a.eat();
        //}
        //else if(a instanceof Lion){
            
            //a.eat();} 
		/********* end *********/
	}
}

// Animal类中定义eat()方法
 abstract class Animal {
	/********* begin *********/
     abstract void eat();
	/********* end *********/
}

// Dog类继承Animal类 复写eat()方法
class Dog extends Animal {
	/********* begin *********/
public void eat(){
    System.out.println("eating bread...");}
	/********* end *********/
}

// Cat类继承Animal类 复写eat()方法
class Cat extends Animal {
	/********* begin *********/
public void eat(){
    System.out.println("eating rat...");}
	/********* end *********/
}

// Lion类继承Animal类 复写eat()方法
class Lion extends Animal {
	public void eat(){
    System.out.println("eating meat...");}
 
	/********* end *********/
}
