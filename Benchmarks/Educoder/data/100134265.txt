package case8;

public class TestPolymorphism {
	public static void main(String[] args) {
		// 以多态方式分别实例化子类对象并调用eat()方法
		/********* begin *********/
        /*show(new Dog()); 
        show(new Cat()); 
        show(new Lion());*/ 
        
        Animal a = new Dog();
        a.eat();
        Dog d = (Dog) a;
        Animal b = new Cat();
        b.eat();
        Cat c = (Cat) b;
        Animal l = new Lion();
        l.eat();
        Lion o = (Lion) l;
       /*public static void show(Animal a){
            a.eat(); 
            if (a instanceof Dog) {
                Dog d = (Dog) a; 
        }
        else if (a instanceof Dog) {
            Cat c = (Cat) a;
        }
        else if (a instanceof Lion) {
                Lion l = (Lion) a;
         }
      }*/

		/********* end *********/
	}
}

// Animal类中定义eat()方法
class Animal {
	/********* begin *********/
    public void eat(){};

	/********* end *********/
}

// Dog类继承Animal类 复写eat()方法
class Dog extends Animal {
	/********* begin *********/
    public void eat(){
        System.out.println("eating bread...");
    }

	/********* end *********/
}

// Cat类继承Animal类 复写eat()方法
class Cat extends Animal {
	/********* begin *********/
    public void eat(){
        System.out.println("eating rat...");
    }

	/********* end *********/
}

// Lion类继承Animal类 复写eat()方法
class Lion extends Animal {
	/********* begin *********/
    public void eat(){
        System.out.println("eating meat...");
    }

	/********* end *********/
}
