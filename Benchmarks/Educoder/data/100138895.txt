package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {
	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
	 Callable<Integer> cts = new ThreadCallable(num);
        FutureTask<Integer> ft = new FutureTask<>(cts);
        new Thread(ft).start();
        try {
            Integer result = ft.get();
            System.out.println("线程的返回值为：" + result);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
/* 在这里实现Callable接口及方法 */
class ThreadCallable implements Callable<Integer> {
    private int num;
    public ThreadCallable() {
    }
    public ThreadCallable(int num) {
        this.num = num;
    }
    public Integer call() throws Exception {
        int[] fb = new int[2];
        fb[0] = 1;
       fb[1] = 1;
        for (int i = 2; i < num; i++) {
            int x = fb[1];
            fb[1] = fb[0] + fb[1];
            fb[0] = x;
        }
        return fb[1];
    }
}

