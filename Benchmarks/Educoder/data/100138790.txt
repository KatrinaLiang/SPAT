package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {
	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
	       ThreadCallable cts = new ThreadCallable();
        // 接收
        cts.a = num;
        FutureTask<Integer> ft = new FutureTask<>(cts);
        new Thread(ft, "有返回值的线程").start();
        
        try {
            System.out.println("线程的返回值为：" + ft.get());
        } catch (Exception e) {
            e.printStackTrace();
        }


	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable  implements Callable<Integer>   {
     int a=0;
public Integer call() throws Exception {
        int one = 1;
        int two = 1;
        int result = 0;
        if(a==1||a==2)
            return 1;
        for (int i = 0; i<a-2 ;i++) {
           result = one + two; 
           one = two;
           two = result;
        }
           return result;
}
    
}
