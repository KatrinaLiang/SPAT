import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

import com.csvreader.CsvReader;
import com.csvreader.CsvWriter;

/*********************数据说明***********************
* 训练数据：src/step1/input/train.csv
* 测试数据：src/step1/input/test.csv
* 结果文件：src/step1/ground_truth/test_prediction.csv
****************************************************/
public class Task {
    
    public static void main(String[] args)throws IOException {
        /********* Begin *********/

        List<String> trainList = getListFromCsv("src/step1/input/train.csv");
        List<String> testList = getListFromCsv("src/step1/input/test.csv");

        double[][] train = new double[trainList.size()][75];

        for (int i = 0; i < trainList.size(); i++) {
            String[] strings = trainList.get(i).split(",");
            for (int j = 0; j < 75; j++) {
                train[i][j] = Double.parseDouble(strings[j]);
            }
        }


        double[][] test = new double[testList.size()][74];
        for (int i = 0; i < testList.size(); i++) {
            double[] cha = new double[trainList.size()];
            String[] strings = testList.get(i).split(",");
            for (int j = 0; j < 73; j++) {
                test[i][j] = Double.parseDouble(strings[j]);
            }

        }

        List<String> idList = new ArrayList<>();
        List<String> dataList = new ArrayList<>();

        for (int i = 0; i < test.length; i++) {
            int id = Integer.parseInt((test[i][0] + "").split("\\.")[0]);

            List<Data> list = new ArrayList<>();


            for (int j = 0; j < train.length; j++) {

                double totalerr = 0;

                for (int k = 1; k < 74; k++) {
                    double err = Math.abs(train[j][k] - test[i][k]);
                    totalerr+=err;
                }

                Data data = new Data(j, totalerr);
                list.add(data);

            }
            Collections.sort(list, new Comparator<Data>() {
                @Override
                public int compare(Data o1, Data o2) {
                    if (o1.error > o2.error) {
                        return 1;
                    } else if (o1.error < o2.error) {
                        return -1;
                    } else{
                        return 0;
                    }
                }
            });
             idList.add(id + "");
            double a = train[list.get(0).id][74];

            int e = (int)(a);
            dataList.add(""+e);

        }
        writeCsvFile("src/step1/ground_truth/test_prediction.csv",idList,dataList);


        /********* End *********/
    }

    
    
    /**
     * 读取csv文件
     * 
     * @param path 文件路径
     * @return 用户的集合
     * @throws IOException
     */
    public static List<String> getListFromCsv(String path) throws IOException {
        List<String> info = new ArrayList<>();
        try {
            // 创建CSV读对象   需要设置编码格式为UTF-8
            CsvReader csvReader = new CsvReader(new FileInputStream(new File(path)),Charset.forName("UTF-8"));
            // 读表头
            boolean readHeaders = csvReader.readHeaders();
            while (csvReader.readRecord()) {
                // 读一整行
                // 读取第一列的数据   csvReader.get(0);
                // 读取一行的数据
                String row = csvReader.getRawRecord();
                info.add(row);
            }
            csvReader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return info;
    }
    
    /**
     * 写结果文件
     * 
     * @param filePath 文件路径
     * @param data 要写入的数据
     * @throws IOException
     */
    public static void writeCsvFile(String filePath, List<String> ids,List<String> data) throws IOException {
        // 创建CSV写对象
        CsvWriter csvWriter = new CsvWriter(filePath, ',', Charset.forName("UTF-8"));
        // CsvWriter csvWriter = new CsvWriter(filePath);
        // 写表头
        String[] headers = {"ID","TARGET"};
        csvWriter.writeRecord(headers);
        //循环写数据
        for(int i = 0 ;i < ids.size();i++){
            String[] content = {ids.get(i), data.get(i)};
            csvWriter.writeRecord(content);
        }
        csvWriter.close();
    }
    
        public static class Data {
        int id;
        double error;

        public Data(int id, double error) {
            this.id = id;
            this.error = error;
        }
    }
}
