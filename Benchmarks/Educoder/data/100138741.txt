package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int  num) {
		// 在这里开启线程 获取线程执行的结果
       ThreadCallable c=new ThreadCallable();
        FutureTask<Integer> ft=new FutureTask<>(c);
            Integer a=num;
		new Thread(ft,a.toString()).start();
         /*int a[]=new int[100];
        
        for(int i=1;i<=c;i++){
          if(i<3)
              a[i]=1;
        else
            a[i]=a[i-1]+a[i-1];}
        System.out.println("线程的返回值为:"+a[i]);
        return a[i];
       /* for(int i=1;i<=sc;i++)
          if(i<3)
              a[i]=1;
        else
            a[i]=a[i-1]+a[i-1];
	}*/
   try{
      System.out.println("线程的返回值为："+ft.get());
 }catch(Exception e){
     e.printStackTrace();}
    }
}
/* 在这里实现Callable接口及方法 */
class ThreadCallable implements Callable<Integer>   {
    public Integer call() throws Exception{
        Integer b=new Integer(Thread.currentThread().getName());
            int a[]=new int[100];
        
        for(int i=1;i<=b;i++){
          if(i<3)
              a[i]=1;
        else
            a[i]=a[i-1]+a[i-2];
        }
        return a[b];
    }
     
}
