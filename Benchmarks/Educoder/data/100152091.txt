package step1;

public class Task {

	 public double solve(double x1, double y1, double r1,
              double x2, double y2, double r2) {
		  /********* Begin *********/
		 double res=0;
		 double d=Math.sqrt(Math.pow(x1-x2,2)+Math.pow(y1-y2,2));
		 double R=r1+r2;
		 //如果两个圆相离或者外切
		 if(d>=R) {
			 res=Math.PI*r1*r1 + Math.PI*r2*r2;
		 }
		 //如果一个圆在另一个圆内部或者内切
		 else if(d<=Math.abs(r1-r2)){
			 double s1=Math.PI*r1*r1;
			 double s2=Math.PI*r2*r2;
			 res=Math.max(s1, s2);
		 }
		 //两个圆相交
		 else {
			 double s1=Math.PI*r1*r1;
			 double s2=Math.PI*r2*r2;
			 double angle1 = 2 * Math.acos((r1 * r1 + d * d - r2 * r2) / (2.0 * r1 * d)); 
			 double angle2 = 2 * Math.acos((r2 * r2 + d * d - r1 * r1) / (2.0 * r2 * d)); 
			 res = r1 * r1 * angle1 / 2.0 + r2 * r2 * angle2 / 2.0- r1 * r1 * Math.sin(angle1) / 2.0 - r2 * r2 * Math.sin(angle2) / 2.0;
			 res=s1+s2-res;
		}
		 return res;
		  /********* End *********/
	  }
	 
}
