package step1;

public class Task {
	public double solve(double x1, double y1, double r1,
			double x2, double y2, double r2) {
		double s = getArea(r1) + getArea(r2); 
		if (isDivide(x1, y1, r1, x2, y2, r2)) {
			return s; 
		}
		else {
			
			if (isIn(r1, r2, dist)) {
				double r = r1; 
				if (r1 < r2)
					r = r2; 
				return getArea(r); 
			}
			
			double s1 = 2 * getArea1(dist, r1, r2); 
			
			double angle1 = getAngle(r2, r1, dist); 
			double angle2 = getAngle(r1, r2, dist); 
			angle1 = 2*Math.PI - 2*angle1; 
			angle2 = 2*Math.PI - 2*angle2;
			double sa = getArea(r1) * angle1 / (Math.PI*2); 
			double sb = getArea(r2) * angle2 / (Math.PI*2); 
			
			return s1 + sa + sb; 
		}
	}
	
	public boolean isIn(double r1, double r2, double dist) {
		if (dist <= Math.abs(r2 - r1)) 
			return true; 
		else
			return false; 
	}
	
	
	public double getAngle(double a, double b, double c) {
		double res = (b*b + c*c - a*a) / (2*b*c); 
		return Math.acos(res); 
	}
	
	public double getArea(double r1) {
		return Math.PI*r1*r1; 
	}
	
	
	public double getArea1(double a, double b, double c) {
		double p = (a + b + c) / 2; 
		double s = Math.sqrt(p * (p - a) * (p - b) * (p - c)); 
		return s; 
	}
	
	private double dist; 
	
	public boolean isDivide(double x1, double y1, double r1,
			double x2, double y2, double r2) {
		
		dist = getDist(x1, x2, y1, y2);
		
		if (r1 + r2 <= dist) 
			return true; 
		else
			return false; 
	}
	
	public double getDist(double x1, double x2, double y1, double y2) {
		double dist = Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2)); 
		return dist; 
	}
	 
	 
}
