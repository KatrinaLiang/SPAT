package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
		ThreadCallable tc = new ThreadCallable();
		tc.n = num;
		FutureTask<Integer> ft = new FutureTask<>(tc);
		new Thread(ft, "线程的返回值为：").start();


	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable  implements Callable<Integer>  {
	public int n;

    public Integer call() throws Exception {
    	int sum = 0;
    	int num1 = 1;
    	int num2 = 1;
    	int num3;
    	int i = 3;
        if(n==1) {
        	sum = num1;
        }else if(n==2) {
        	//sum = num1+num2;
            sum=num2;
        }else {
        	//sum=num1+num2;
        	while(i<=n) {
        		num3 = num1+num2;
        		//sum = sum + num3;
                sum=num3;
        		num1 = num2;
        		num2 = num3;
        		i++;
        	}
        	
        	
        }

           System.out.println(Thread.currentThread().getName() +  sum);

        return sum;
    }


}

