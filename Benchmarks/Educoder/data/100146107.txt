package step4;
import java.util.concurrent.locks.*;
public class Task {
	public volatile int inc = 0;
    private Lock lock=new ReentrantLock();
	public void increase() {
        lock.lock();
        try
        {
		inc++;
        }catch(Exception e){}
        finally
        {
            lock.unlock();
        }
    }

	public static void main(String[] args) {
		final Task test = new Task();
		for (int i = 0; i < 10; i++) {
			new Thread() {
				public void run() {
					for (int j = 0; j < 1000; j++)
						test.increase();
				};
			}.start();
		}
		while (Thread.activeCount() > 1) // 保证前面的线程都执行完
			Thread.yield();
		System.out.println(test.inc);
	}
}
