package step3;
import java.util.*;
import step2.ListNode;
public class LinkedList {
    ListNode head;  // 链表的头结点
    private int length;  // 链表的长度

    // 构造函数
    public LinkedList() {
        length = 0;
    }
    
    // 获取链表长度
    public int getLength() {
        return length;
    }

    // 返回链表的头结点
    public synchronized ListNode getHead() { 
        return head; 
    }
    
    // 获取对应位置的节点
    public synchronized ListNode getAt(int position) {
    		// 请在此提供实现代码
        if(position < 0 || position >= this.length){
            return null;
        }
        ListNode currentNode = head;
        for(int i = 0; i< this.length; i++){
            if(i == position){
            	break;    
            }else{
            	currentNode = currentNode.getNext();
            }               
        }
        return currentNode;
    }
    
    // 在链表末尾追加一个节点
    public synchronized void insertAtEnd(ListNode node) {
        if (head == null) 
            head = node;
        else {
            ListNode p, q;
            for(p = head; (q = p.getNext()) != null; p = q);
                p.setNext(node);
        }
        length ++;
    }

}
