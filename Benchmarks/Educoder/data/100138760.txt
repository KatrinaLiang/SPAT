package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
		ThreadCallable cts= new ThreadCallable(num);
            
        FutureTask<Integer> ft = new FutureTask<>(cts);

        new Thread(ft).start();
            
           
         	
        try {
             System.out.println("线程的返回值为："+ft.get());
        } catch (Exception e) {
            e.printStackTrace();
        }
            
            
        
            
        
        
        }
	
        

	}


/* 在这里实现Callable接口及方法 */
class ThreadCallable implements Callable<Integer>{
    int num;
    public ThreadCallable(){
   // System.out.println("ojbk");
    }
    public ThreadCallable(int num){
    this.num=num;
    }
    public Integer call() throws Exception {
       	int a=0,b=0,c=0;
        int i=0;
        for(i=0;i<num;i++){
            
            if(a==0){
                a=1;
                c=a;
            }else{
            	a=c+b;
                b=c;
                c=a;
            }
        }
       return a;     
    }
    

}
