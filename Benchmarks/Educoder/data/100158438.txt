package step4;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;


public class Reflect_stu {
    public static void main(String[] args) throws InvocationTargetException {
        //使用反射调用
        	Class clazz = null;
        try{
            clazz = Class.forName("step4.Apple");
            /********** Begin *********/
			Apple appObj =(Apple) clazz.newInstance();
			Method setPrice = clazz.getMethod("setPrice",double.class);
			Method getPrice = clazz.getMethod("getPrice");
			Method getTotal = clazz.getMethod("getTotal",double.class,int.class);
			setPrice.invoke(appObj,14);
			double price =(double) getPrice.invoke(appObj);
			double total =(double) getTotal.invoke(appObj,20,24);
			System.out.println(price);
			System.out.println(total);
            /********** End *********/
       		 }catch (Exception e){
					e.printStackTrace();
				} 
    }

}


class Apple {
    private double price;
    private int count;

    public Apple() {
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public int getCount() {
        return count;
    }

    public void setCount(int count) {
        this.count = count;
    }

    public double getTotal(double price, int count) {
        return price * count;
    }
}