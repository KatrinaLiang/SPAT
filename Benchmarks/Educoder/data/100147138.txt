package step2;

public class BestTeam {

	/********* Begin *********/
     public Long getBestTeam(int numbers, int[] abilities, int selectedNum, int distance){
        int n=numbers+1;
        int k=selectedNum;
        int d=distance;
    	long[][] max = new long[k][n];
        long[][] min = new long[k][n];
        for(int i = 0; i < k; i++)
            for(int j = 0; j < n; j++){
                max[i][j] = 1;
                if(i == 0){
                    min[i][j] = abilities[j];
                    max[i][j] = abilities[j];
                }
            }
 
        for(int i = 1; i < k; i++)
            for(int j = 0; j < n; j++)
                for(int m = 1; m <= d; m++){
                    if(j - m >= 0){
                        if(abilities[j] > 0){
                            min[i][j] = Math.min(min[i][j], min[i - 1][j - m] * abilities[j]);
                            max[i][j] = Math.max(max[i][j], max[i - 1][j - m] * abilities[j]);
                        } else{
                            min[i][j] = Math.min(min[i][j], max[i - 1][j - m] * abilities[j]);
                            max[i][j] = Math.max(max[i][j], min[i - 1][j - m] * abilities[j]);
                        }
                    }
                }
        long Max = 0;
        for(int i = 0; i < n; i++)
            Max = Math.max(Max, max[k - 1][i]);
        return Max;
    }
 
}