import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import com.csvreader.CsvReader;
import com.csvreader.CsvWriter;

/*********************数据说明***********************
* 训练数据：src/step1/input/train.csv
* 测试数据：src/step1/input/test.csv
* 结果文件：src/step1/ground_truth/test_prediction.csv
****************************************************/
class Customer
{
    public int ID;
    public double[] Properties;
    public Customer()
    {

    }

    public Customer(int id, double[] properties)
    {
        ID = id;
        Properties = properties;
    }
}
public class Task {

    public static double r;
    public static double getRandom(double probably)
    {
        r += 0.01;
        return Math.min(1, r);
    }

    
    public static void main(String[] args) throws IOException{
        Random rand = new Random(System.currentTimeMillis());
        r = rand.nextDouble();
        List<Customer> customersList = getListFromCsv("src/step1/input/test.csv");
        //0.0343
        int l = customersList.size();
        List<String> ids = new ArrayList<String>();
        List<String> data = new ArrayList<String>();
        for (int i = 0; i < customersList.size(); i++)
        {
            ids.add(String.valueOf(customersList.get(i).ID));
            data.add(String.valueOf(getRandom(0.0343)));
        }

        writeCsvFile("src/step1/ground_truth/test_prediction.csv",ids,data);
    }
    

    public static List<Customer> getListFromCsv(String path) throws IOException
    {
        List<Customer> customers = new ArrayList<>();
        try
        {
            CsvReader csvReader = new CsvReader(new FileInputStream(new File(path)), Charset.forName("UTF-8"));
            boolean readHeaders = csvReader.readHeaders();
            while (csvReader.readRecord())
            {

                String row = csvReader.getRawRecord();
                String[] tags = row.split(",");
                int id = Integer.parseInt(tags[0]);
                double[] props = new double[tags.length - 1];
                for (int i = 1; i < tags.length; i++)
                {
                    props[i - 1] = Double.parseDouble(tags[i]);
                }
                customers.add(new Customer(id, props));
            }
            csvReader.close();
        } catch (IOException e)
        {
            e.printStackTrace();
        }
        return customers;
    }
    public static void writeCsvFile(String filePath, List<String> ids, List<String> data) throws IOException
    {
        // 创建CSV写对象
        CsvWriter csvWriter = new CsvWriter(filePath, ',', Charset.forName("UTF-8"));
        // CsvWriter csvWriter = new CsvWriter(filePath);
        // 写表头
        String[] headers = {"ID", "TARGET"};
        csvWriter.writeRecord(headers);
        //循环写数据
        for (int i = 0; i < ids.size(); i++)
        {
            String[] content = {ids.get(i), data.get(i)};
            csvWriter.writeRecord(content);
        }
        csvWriter.close();
    }
    
}

