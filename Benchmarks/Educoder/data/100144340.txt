package step4;

import java.io.File;
import java.io.FileFilter;

public class Task {
	
	/********** Bgin **********/
	public static void showDirStructure(File file)	{
		int flag = 1;
		FileFilter filter = filex -> {
		      if (filex.isFile()) {
		        String fileName = filex.getName().toLowerCase();
		        if (fileName.endsWith(".txt") | fileName.endsWith(".docx")) {
		          return false;
		        }
		      }
		      return true;
		    };
        File [] files1 = file.listFiles(filter);
        System.out.println("+--"+file.getName());
        for(File filee : files1){
			boolean isDir = filee.isDirectory();
            if(isDir){
            	for(int n = 0;n<flag;n++) {
            		System.out.print("  ");
            	}
            	System.out.println("+--"+filee.getName());
            	showDirStructure2(filee,flag+1);
            }else {
            	for(int n = 0;n<flag;n++) {
            		System.out.print("  ");
            	}
            	System.out.println("--"+filee.getName());
            	
            }
        }

	}
	public static void showDirStructure2(File file,int flag){
		FileFilter filter = filex -> {
		      if (filex.isFile()) {
		        String fileName = filex.getName().toLowerCase();
		        if (fileName.endsWith(".txt") | fileName.endsWith(".docx")) {
		          return false;
		        }
		      }
		      return true;
		    };
        File [] files1 = file.listFiles(filter);
        for(File filee : files1){
			boolean isDir = filee.isDirectory();
            if(isDir){
            	for(int n = 0;n<flag;n++) {
            		System.out.print("  ");
            	}
            	System.out.println("+--"+filee.getName());
            	showDirStructure2(filee,flag+1);
            }else {
            	for(int n = 0;n<flag;n++) {
                System.out.print("  ");
}
System.out.println("--"+filee.getName());            	
}
}
}
	    public static void main(String [] args) {
		File testf = new File("D:\\src\\root");
		showDirStructure(testf);	
}
/********** End **********/
}
