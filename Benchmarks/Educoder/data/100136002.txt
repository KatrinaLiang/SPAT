package case1;

import java.util.Scanner;

public class Task1 {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String dogName = sc.next();
		String dogSex = sc.next();
		String dogColor = sc.next();
		String catName = sc.next();
		String catSex = sc.next();
		double catWeight = sc.nextDouble();
		// 通过有参构造函数实例化Dog类对象dog
        Dog2 d = new Dog2(dogName,dogSex,dogColor);
		// dog调用talk()方法
        d.getColor=dogColor;
        d.talk();
		// dog调用eat()方法
        d.eat();
		/********* begin *********/
		
		/********* end *********/
		// 通过有参构造函数实例化Cat类对象cat
        Cat c =new Cat(catName ,catSex , catWeight);
        c.getWeight=catWeight;
		// cat调用talk()方法
        c.talk();
		// cat调用eat()方法
        c.eat();
		/********* begin *********/
		
		/********* end *********/
	}
}

// 抽象类Pet 封装属性name和sex
// 构造函数初始化name和sex
// 声明抽象方法talk()
// 声明抽象方法eat()
abstract class Pet {
	/********* begin *********/
     private String name;
     private String sex;
    public String getName() {
     return name;
 }
    public void setName(String name) {
     this.name = name;
 }
    public String getSex() {
     return sex;
 }
    public void setSex(String sex) {
     this.sex = sex;
 }
    Pet(String name ,String sex){
    }
    public Pet() {
	}
	abstract void talk();
    abstract void eat();
	/********* end *********/
}

// Dog类继承自Pet类 封装属性color
// 构造函数初始化name、sex和color
// 实现自己的talk()方法和eat()方法
// talk()输出'名称：name，性别：sex，颜色：color，汪汪叫'
// eat()输出'name吃骨头'
class Dog2 extends Pet {
	public String getColor;
	/********* begin *********/
    private String color;
    
    public String getColor() {
     return color;
 }
    public void setColor(String color) {
     this.color = color;
 }
    
	public Dog2 (String name, String sex ,String color){
		super();
        setName(name);
        setSex(sex);
        setColor(color);
    }
    public void talk(){
     System.out.println("名称："+getName()+"，性别："+getSex()+"，颜色："+color+"，汪汪叫");
    }
    public void eat(){
     System.out.println(getName()+"吃骨头！");
    }
	/********* end *********/
}

// Cat类继承自Pet类 封装属性weight
// 构造函数初始化name、sex和weight
// 实现自己的talk()方法和eat()方法
// talk()输出'名称：name，性别：sex，体重：weight kg，喵喵叫'
// eat()输出'name吃鱼'
class Cat extends Pet {
	public double getWeight;
	/********* begin *********/
    private double weight;
    public double getWeight() {
     return weight;
 }
    public void setWeight(double weight) {
     this.weight = weight;
 }
    public Cat(String name , String sex ,double weight){
        setName(name);
        setSex(sex);
        setWeight(weight);
    }
    public void talk(){
      System.out.println("名称："+getName()+"，性别："+getSex()+"，体重："+weight+"kg"+"，喵喵叫");
    }
    public void eat(){
      System.out.println(getName()+"吃鱼！");
    }
	/********* end *********/
}