package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int sum) {
		// 在这里开启线程 获取线程执行的结果
		ThreadCallable tc = new ThreadCallable();
        tc.sum = sum;
        
        FutureTask<Integer> ft = new FutureTask<>(tc);
        Thread thread = new Thread(ft,"");   //FutureTask对象作为Thread对象的target创建新的线程
        thread.start();
        
        try{
        	System.out.println("线程的返回值为：" + ft.get());
        }catch(Exception e){
        
        }
	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable implements Callable<Integer> {
	int sum;
	
    @Override
    public Integer call() throws Exception {
        int x = 0;
        int y = 1;
        int z = 0;
        for(int i = 1; i < this.sum; i++){
        	z = y;
            y = x + y;
            x = z;
        }
    	return y;
    }
}
