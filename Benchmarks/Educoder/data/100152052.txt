package step1;

public class Task {
    public static double pi=2*java.lang.Math.asin(1.0);
    public double intersect(double x1, double y1, double r1, double x2, double y2, double r2) {
        double s, temp, p, l, ans;
        l = java.lang.Math.sqrt((x2 - x1)*(x2 - x1) + (y2 - y1)*(y2 - y1));
        if (l >= r1 + r2)	ans = 0;
        else if (l <= java.lang.Math.abs(r1 - r2)) {
            if (r1 <= r2)
                ans = pi * r1*r1;
            else
                ans = pi * r2*r2;
        }
        else {
            p = (l + r1 + r2) / 2;
            s = 2 * java.lang.Math.sqrt(p*(p - l)*(p - r1)*(p - r2));
            if (r1 > r2) {
                temp = x1; x1 = x2; x2 = temp;
                temp = y1; y1 = y2; y2 = temp;
                temp = r1; r1 = r2; r2 = temp;
            }
            ans = java.lang.Math.acos((r1*r1 + l * l - r2 * r2) / (2 * r1*l))*r1*r1 + java.lang.Math.acos((r2*r2 + l * l - r1 * r1) / (2 * r2*l))*r2*r2 - s;
        }
        return ans;
    }
    public double solve(double x1, double y1, double r1,
                        double x2, double y2, double r2) {
        /********* Begin *********/

        return r1 * r1*pi + r2 * r2*pi - intersect(x1,y1,r1,x2,y2,r2);

        /********* End *********/
    }

}
