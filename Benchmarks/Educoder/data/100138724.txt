package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
		ThreadCallable tr=new ThreadCallable();
        tr.setNum(num);
		FutureTask<Integer> ft=new FutureTask<>(tr);
		new Thread(ft,"1").start();
        try{
        	System.out.println("线程的返回值为："+ft.get());
        }catch(Exception e){
        
        }
	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable  implements Callable<Integer>  {
	int num;
    public void setNum(int num){
    	this.num=num;
    }
    
    public Integer call() throws Exception{
    	return qiu();
    }
    public int qiu(){
    	int count;
        int former=0;
        int nextformer=1;
        int temp=former+nextformer;
        for(int i=2;i<=num;i++){
        	temp=former+nextformer;
            former=nextformer;
            nextformer=temp;
        }
        return temp;
    }
}
