package setp17;

import java.util.Arrays;
import java.util.Scanner;

public class HelloWorld {
    public static void main(String[] arga){
    HelloWorld sc=new HelloWorld();
    Scanner no=new Scanner(System.in);
        int a=no.nextInt();
        int b=no.nextInt();
        int sum=sc.getSum(a,b);
        System.out.println(sum); 
        double c=no.nextFloat();
        double d=no.nextFloat();
        double e=no.nextFloat();
        double avg=sc.getAvg(c,d,e);
        System.out.println(avg);
        int f=no.nextInt();
        int g=no.nextInt();
        HelloWorld.printRect(f,g);
        int h=no.nextInt();
        int i=no.nextInt();
        int j=no.nextInt();
        int k=no.nextInt();
        int l=no.nextInt();
        int sort[]={h,i,j,k,l};
        HelloWorld.sortArr(sort);
   
    }

    /**
     * 第一题：定义一个方法 接收两个整数类型的参数 a和b，返回两个数的和  返回值类型为int 方法名为：getSum
     */
    public static int getSum(int a,int b){
    return a+b;
    }


    /**
     * 第二题： 定义一个方法 接收三个double类型参数a，b，c， 返回这三个数的平均值 返回值类型为double 方法名为：getAvg
     */
    public static double getAvg(double c,double d,double e){
        double avg=(c+d+e)/3;
    return avg;
    }


    /**
     * 第三题： 定义一个方法 接收两个参数 a 和b 打印a行 b列的一个矩形  不需要返回值   方法名为：printRect
     */
    public static void printRect(int a,int b){
        for(int i=1;i<=a;i++){
            for(int j=1;j<=b;j++){
            System.out.print("*");
            }
            System.out.println();
        }
    }

	
	/**
	 * 第四题：定以一个方法，接收整形数组 为参数  对这个数组进行升序排序  最后输出该数组 不需要返回值 方法名为 sortArr  
	 */
    public static void sortArr(int[] sort){
        Arrays.sort(sort);
        for(int i=0;i<sort.length;i++){
        System.out.println(sort[i]);
        }
    }
	
	

    /**
     *  第五题
     * 你只需要实现for 循环括号的内容就可 ，打印语句系统已经给你完成 
     */
    public static void Print99() {
        int i,j;
        for (j=1;j<=9;j++) {
            for(i=1;i<=j;i++) {
                System.out.print(i + " * " + j + " = " + i * j + "\t");
            }
            System.out.println();
        }
    }

    
    
    
}
