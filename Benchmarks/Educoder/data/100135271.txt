package case5;

public class abstractTest {
    public static void main(String[] args) {
        // 实例化一个Student类的对象s，为Student对象s中的school赋值，打印输出信息
        /********* begin *********/
        Student s = new Student("张三", 20);
        Worker w = new Worker("李四", 30);
        s.talk();
        w.talk();
        /********* end *********/
    }
}

abstract class Person {
    /********* begin *********/
    private String name;
    private int age;
    private String occupation;

    abstract void talk();

    public Person(String name, int age, String occupation){
        this.name = name;
        this.age = age;
        this.occupation = occupation;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getOccupation() {
        return occupation;
    }
    /********* end *********/
}

class Student extends Person {
    /********* begin *********/
    public Student(String name, int age){
        super(name, age, "学生！");
    }

    public void talk(){
        System.out.println("学生——>姓名：" + getName() + "，年龄：" + getAge() + "，职业：" + getOccupation());
    }
    /********* end *********/
}

// Worker类继承自Person类，添加带三个参数的构造方法，复写talk()方法 返回姓名、年龄和职业信息
class Worker extends Person {
    public Worker(String name, int age){
        super(name, age, "工人！");
    }

    @Override
    public void talk() {
        System.out.println("工人——>姓名：" + getName() + "，年龄：" + getAge() + "，职业：" + getOccupation());
    }
    /********* begin *********/

    /********* end *********/

}