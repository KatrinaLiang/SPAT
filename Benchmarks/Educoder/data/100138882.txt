package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
	   ThreadCallable cts = new ThreadCallable(num);
        // 接收
        FutureTask<Integer> ft = new FutureTask<>(cts);
        new Thread(ft, "有返回值的线程").start();
      try {
            System.out.println("线程的返回值为：" + ft.get());
        } catch (Exception e) {
            e.printStackTrace();
        }
	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable  implements Callable<Integer>  {
    public int num;
    public ThreadCallable(){
    }
    public ThreadCallable(int num){
        this.num=num;
    }
    public Integer call() throws Exception {
        int[] a=new int[10000];
        int i = 2;
        a[0]=1;
        a[1]=1;
        for (; i <num ; i++) {
            a[i]=a[i-1]+a[i-2];
        }
        //System.out.println("线程的返回值为："+ i);
        return a[num-1];



}
}
