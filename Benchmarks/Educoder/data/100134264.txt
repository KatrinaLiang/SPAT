package case8;

public class TestPolymorphism {
	public static void main(String[] args) {
		// 以多态方式分别实例化子类对象并调用eat()方法
		/********* begin *********/
		//show(new Dog());
        //show(new Cat());
        //show(new Lion());
        Animal b = new Dog();
        b.eat();
        Animal a = new Cat();
        a.eat();
        
        Animal c = new Lion();
        c.eat();
        
        
        
		/********* end *********/
	}

public static void show(Animal a) {
        a.eat();
        // 类型判断
        if (a instanceof Cat) { // 猫做的事情
            Cat c = (Cat) a;
            
        } else if (a instanceof Dog) { // 狗做的事情
            Dog c = (Dog) a;
           
        }
    	else if (a instanceof Lion){
            Lion c=(Lion) a;
        }
            
    }
}


// Animal类中定义eat()方法
abstract class Animal {
	/********* begin *********/
 	abstract void eat();
	/********* end *********/
}

// Dog类继承Animal类 复写eat()方法
class Dog extends Animal {
	/********* begin *********/
	public void eat() {
        System.out.println("eating bread...");
    }
    
	/********* end *********/
}

// Cat类继承Animal类 复写eat()方法
class Cat extends Animal {
	/********* begin *********/
	public void eat() {
        System.out.println("eating rat...");
    }
     
	/********* end *********/
}

// Lion类继承Animal类 复写eat()方法
class Lion extends Animal {
	/********* begin *********/
	public void eat() {
        System.out.println("eating meat...");
    }
     
	/********* end *********/
}
