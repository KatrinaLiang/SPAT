package step2;

import java.util.NoSuchElementException;


public class MyStack<E> {

	//链表结点内部类
    private static class Node<E> {
        private E item;
        private Node<E> next;
        Node(E item,Node next){
        	this.item=item;
        	this.next=next;
        }
    }
	
    private Node<E> head;//头结点
    private Node<E> top;//栈顶
    private int size;//栈中元素个数

    public MyStack() {
        head = new Node<E>(null,null);
        head.next = null;
        top = null;//栈顶初始化为null
        size = 0;
    }

    /**
     * 把item压入栈中
     *
     * @param item
     */
    public void push(E item) {
        /********** Begin *********/
    	top=new Node<E>(item,top);
    	size++;
        /********** End *********/
    }

    /**
     * 返回它栈顶元素并删除
     */
    public E pop() {
        if (isEmpty())
            throw new NoSuchElementException("栈为空！");

        /********** Begin *********/
        E it=top.item;
        Node<E>temp=top.next;
        top=temp;
        size--;
        return it;
        /********** End *********/
    }

    /**
     * 返回栈中元素个数
     *
     * @return
     */
    public int size() {
        return size;
    }

    /**
     * 判断一个栈是否为空
     *
     * @return
     */
    public boolean isEmpty() {
        return (null == head);
    }

    
}