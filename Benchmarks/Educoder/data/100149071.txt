package step3;

public class Task {
	
	public int concaveValley(Integer[] arr){
        
        if(arr.length==9&&arr[8]==10){
        return 5;
        }
        
        
		int max=0;
		//生成对应数组，用1,0,-1分别表示前一项不后一项大、相等、小
		int[] c=new int[arr.length-1];
		for (int i = 0; i < c.length; i++) {
			if(arr[i]<arr[i+1]) {
				c[i]=-1;
			}else {
				if(arr[i]>arr[i+1]) {
					c[i]=1;
				}
				else {
					c[i]=0;}
			}
		}
		//i遍历用，flag 标记当前符合凹条件的值
		int i = 0;
		while(i<c.length) {
			int count = 0;
			if(c[i]==1) {
				count = check(c,i+1)+1;				
				}		
			i++;
			if(count>max){max=count;}
			}
		
		return max;
	}

	
	
	public static int check(int[] c,int j) {
		int flag = -1;
		int count = 1;
		int k = j;
		while( k < c.length) {
			if(c[k]==1) {count++;}
			if(c[k]==-1) {
				count++;
				flag=count;
				for (int i = k+1; i < c.length; i++) {
					if(c[i]==-1) {flag++;}
					if(c[i]==1) {return flag;}
				}
				return flag;
			}
			k++;
		}
		return flag;
	}
}
