package case8;

public class TestPolymorphism {
	public static void main(String[] args) {
		// 以多态方式分别实例化子类对象并调用eat()方法
		/********* begin *********/
          // show(new Dog());
         // show (new Cat());
        //show(new Lion());
        Animal a=new Dog();
        a.eat();
        Animal c=new Cat();
        c.eat();
        Animal d=new Lion();
        d.eat();
		/********* end *********/
	}
    public static void show(Animal a)
    {
        a.eat();
        if(a instanceof Dog)
        {
            Dog c=(Dog) a;
        }
        else if(a instanceof Cat)
        {
            Cat c=(Cat) a;
        }
        else if(a instanceof Lion)
        {
            Lion c=(Lion) a;
        }
}
}
// Animal类中定义eat()方法
class Animal {
	/********* begin *********/
  public void eat()
  {
      System.out.println(" ");
  }
	/********* end *********/
}

// Dog类继承Animal类 复写eat()方法
class Dog extends Animal {
	/********* begin *********/
public  void eat()
{
    System.out.println("eating bread...");
}
	/********* end *********/
}

// Cat类继承Animal类 复写eat()方法
class Cat extends Animal {
	/********* begin *********/
public  void eat()
{
System.out.println("eating rat...");
}
	/********* end *********/
}

// Lion类继承Animal类 复写eat()方法
class Lion extends Animal {
	/********* begin *********/
public  void eat()
{
    System.out.println("eating meat...");
}
	/********* end *********/
}

