import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;

import com.csvreader.CsvReader;
import com.csvreader.CsvWriter;

/*********************数据说明***********************
* 训练数据：src/step1/input/train.csv
* 测试数据：src/step1/input/test.csv
* 结果文件：src/output/test_prediction.csv
****************************************************/
public class Task {
    
    public static void main(String[] args) throws IOException {
        /********* Begin *********/
    List<String> train = getListFromCsv("src/step1/input/train.csv");

        int attribute_count = train.get(0).split(",").length - 2;
        float attribute_aveg[] = new float[attribute_count];
        // 遍历每个属性
        for (int i = 0; i < attribute_count; i++) {
            int k = 0;
            // 遍历每个元组的这个属性
            for (int j = 0; j < train.size(); j++) {
                String value = train.get(j).split(",")[i + 1];
                if (train.get(j).split(",")[53].equalsIgnoreCase("1"))

                {
                    attribute_aveg[i] += Integer.parseInt(value);
                    k++;
                }
            }
            attribute_aveg[i] /= k;

        }

        List<String> test = getListFromCsv("src/step1/input/test.csv");
        List<String> ids = new ArrayList<>();
        List<String> datas = new ArrayList<>();
         for (int i = 0; i < test.size(); i++) {
                   int choose=32;
            String id = test.get(i).split(",")[0];
            float temp = Math.abs(Float.parseFloat(test.get(i).split(",")[choose+1]));
            double standard=Math.abs(attribute_aveg[choose]);
            String data = String.format("%.1f", temp/standard);
            if(temp/standard>1)
                datas.add("0");
            else
                datas.add(data);
            ids.add(id);
        }


        writeCsvFile("src/output/test_prediction.csv", ids, datas);

        /********* End *********/
    }
    
    
    /**
     * 读取csv文件w
     * 
     * @param path 文件路径
     * @return 用户的集合
     * @throws IOException
     */
    public static List<String> getListFromCsv(String path) throws IOException {
        List<String> info = new ArrayList<>();
        try {
            // 创建CSV读对象   需要设置编码格式为UTF-8
            CsvReader csvReader = new CsvReader(new FileInputStream(new File(path)),Charset.forName("UTF-8"));
            // 读表头
            boolean readHeaders = csvReader.readHeaders();
            while (csvReader.readRecord()) {
                // 读一整行
                // 读取第一列的数据   csvReader.get(0);
                // 读取一行的数据
                String row = csvReader.getRawRecord();
                info.add(row);
            }
            csvReader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return info;
    }
    
    /**
     * 写结果文件
     * 
     * @param filePath 文件路径
     * @param data 要写入的数据
     * @throws IOException
     */
    public static void writeCsvFile(String filePath, List<String> ids,List<String> data) throws IOException {
        // 创建CSV写对象
        CsvWriter csvWriter = new CsvWriter(filePath, ',', Charset.forName("UTF-8"));
        // CsvWriter csvWriter = new CsvWriter(filePath);
        // 写表头
        String[] headers = {"ID","TARGET"};
        csvWriter.writeRecord(headers);
        //循环写数据
        for(int i = 0 ;i < ids.size();i++){
            String[] content = {ids.get(i), data.get(i)};
            csvWriter.writeRecord(content);
        }
        csvWriter.close();
    }
    
    
}
