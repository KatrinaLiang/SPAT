import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import com.csvreader.CsvReader;
import com.csvreader.CsvWriter;

/*********************数据说明***********************
* 训练数据：src/step1/input/train.csv
* 测试数据：src/step1/input/test.csv
* 结果文件：src/step1/ground_truth/test_prediction.csv
****************************************************/
public class Task {
    
    private static int numOfSame(String[] list1, String[] list2) {
        int same = 0;
        int len = Math.min(list1.length, list2.length);
        //从 1 开始，忽略 id 
        for(int i=1; i<len; i++) {
            if(list1[i].equals(list2[i]))
                same++;
        }
        return same;
    }
    
    public static void main(String[] args) throws IOException {
        /********* Begin *********/
        String path = "src/";
        
        List<String> trainList = getListFromCsv(path + "step1/input/train.csv");
        List<String> ids = new ArrayList<String>();
        List<String> data = new ArrayList<String>();
        List<String> testList = getListFromCsv(path + "step1/input/test.csv");
        for(String row : testList) {
            ids.add(row.split(",")[0]);
        }
        for(int i=0; i<testList.size(); i++) {
            String ans = "0.5";
            int maxSame = 0;
            String[] cols = testList.get(i).split(",");
            for(String user : trainList) {
                String[] trainCols = user.split(",");
                int same = numOfSame(cols, trainCols);
                if(same > maxSame) {
                    maxSame = same;
                    ans = trainCols[trainCols.length - 1];
                }
            }
            data.add("0." + (new Random().nextInt(9) + 1));
        }
        File file = new File(path + "step1/ground_truth/test_prediction.csv");
        file.getParentFile().mkdirs();
        file.createNewFile();
        writeCsvFile(file.getAbsolutePath(), ids, data);
        /********* End *********/
    }
    
    
    /**
     * 读取csv文件
     * 
     * @param path 文件路径
     * @return 用户的集合
     * @throws IOException
     */
    public static List<String> getListFromCsv(String path) throws IOException {
        List<String> info = new ArrayList<>();
        try {
            // 创建CSV读对象   需要设置编码格式为UTF-8
            CsvReader csvReader = new CsvReader(new FileInputStream(new File(path)),Charset.forName("UTF-8"));
            // 读表头
            boolean readHeaders = csvReader.readHeaders();
            while (csvReader.readRecord()) {
                // 读一整行
                // 读取第一列的数据   csvReader.get(0);
                // 读取一行的数据
                String row = csvReader.getRawRecord();
                info.add(row);
            }
            csvReader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return info;
    }
    
    /**
     * 写结果文件
     * 
     * @param filePath 文件路径
     * @param data 要写入的数据
     * @throws IOException
     */
    public static void writeCsvFile(String filePath, List<String> ids,List<String> data) throws IOException {
        // 创建CSV写对象
        CsvWriter csvWriter = new CsvWriter(filePath, ',', Charset.forName("UTF-8"));
        // CsvWriter csvWriter = new CsvWriter(filePath);
        // 写表头
        String[] headers = {"ID","TARGET"};
        csvWriter.writeRecord(headers);
        //循环写数据
        for(int i = 0 ;i < ids.size();i++){
            String[] content = {ids.get(i), data.get(i)};
            csvWriter.writeRecord(content);
        }
        csvWriter.close();
    }
    
    
}
