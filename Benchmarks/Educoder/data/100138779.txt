package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;
import java.io.IOException;
import java.util.Scanner;

public class Task {
	
	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
		ThreadCallable  cts = new ThreadCallable();
        cts.setnum(num);
        // 接收
        FutureTask<Integer> ft = new FutureTask<Integer>(cts);
        
        new Thread(ft).start();
        
        try {
            System.out.println("线程的返回值为：" + ft.get());
        } catch (Exception e) {
            e.printStackTrace();
        }
	}
    
   
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable implements Callable<Integer> {
		public int num;	
    public void setnum(int num){
    this.num = num;
    }
    public Integer call() throws Exception {
        int i = 0;
       
        //设置数列初始项
        int []sum = new int[100];
       
        for (; i < num; i++) {
            if(i<2){
                sum[i]=1;
            }else{
            sum[i] = sum[i-1]+sum[i-2];
            }
            
        }
        return sum[num-1];
    }



}
