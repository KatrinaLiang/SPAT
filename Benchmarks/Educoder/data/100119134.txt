package setp17;

import java.util.Arrays;
import java.util.Scanner;

public class HelloWorld {
public static void main(String[] args){  
        Scanner sc =new Scanner(System.in);
        int A=sc.nextInt();
        int B=sc.nextInt();
           double C=sc.nextDouble();
        double D=sc.nextDouble();
        double E=sc.nextDouble();
        int F=sc.nextInt();
        int G=sc.nextInt();
        int H=sc.nextInt();
        int I=sc.nextInt();
        int J=sc.nextInt();
        int K=sc.nextInt();
int L=sc.nextInt();
        int []arr={H,I,J,K,L};
        
        
      int m=getSum(A,B);
        System.out.println(m);
        double n=getAvg(C,D,E);
        System.out.println(n);
        printRect(F,G);
       sortArr(arr);
        
           
    }
 
      public static int getSum(int A, int B){
       return A+B;
        }
      public static double getAvg(double C,double E,double D){
        return (C+D+E)/3;
        }
    public static void printRect(int F,int G){
        for(int i=0;i<F;i++){
        for(int x=0;x<G;x++){
                System.out.print('*');
            }
            System.out.println();
        }
        
    }
    public static void sortArr(int[] arr){
       Arrays.sort(arr); 
            for(int x=0;x<arr.length;x++){
            System.out.println(arr[x]);
                
            }
        }
          
    
    /**
     * 第一题：定义一个方法 接收两个整数类型的参数 a和b，返回两个数的和  返回值类型为int 方法名为：getSum
     */



    /**
     * 第二题： 定义一个方法 接收三个double类型参数a，b，c， 返回这三个数的平均值 返回值类型为double 方法名为：getAvg
     */



    /**
     * 第三题： 定义一个方法 接收两个参数 a 和b 打印a行 b列的一个矩形  不需要返回值   方法名为：printRect
     */
  


/**
* 第四题：定以一个方法，接收整形数组 为参数  对这个数组进行升序排序  最后输出该数组 不需要返回值 方法名为 sortArr  
*/




    /**
     *  第五题
     * 你只需要实现for 循环括号的内容就可 ，打印语句系统已经给你完成 
     */
    public static void Print99() {
        for ( int j=1;j<10;j++){
            for( int i=1;i<=j;i++  ) {
                System.out.print(i+ " * " + j+ " = " + i * j + "\t");
            }
            System.out.println();
        }
    }

    
    
    
} 

