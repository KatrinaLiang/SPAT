package step2;

public class BestTeam {

	/********* Begin *********/

    public Long getBestTeam(int numbers, int[] abilities, int selectedNum, int distance){
		 int n = numbers;

            int[] ability = new int[n]; 

            for(int i = 0; i < n; i++){ 

                ability[i] = abilities[i + 1]; 

            } 

            int k = selectedNum; 

            int d = distance; 

             

            long[][] maxProduct = new long[n][k];  

            long[][] minProduct = new long[n][k]; 

             

            //合唱团中只有一个人 

            for(int i = 0; i < n; i++){ 

                maxProduct[i][0] = ability[i]; 

                minProduct[i][0] = ability[i]; 

            } 

             

            long max = Long.MIN_VALUE; 

            for(int i = 0; i < n; i++){ 

                for(int j = 1; j < k; j++){ 

                    for(int p = i-1; p >= Math.max(i-d,0); p--){ 

                        maxProduct[i][j] = Math.max(maxProduct[i][j], 

                                           maxProduct[p][j-1]*ability[i]); 

                        maxProduct[i][j] = Math.max(maxProduct[i][j], 

                                   minProduct[p][j-1]*ability[i]); 

                        minProduct[i][j] = Math.min(minProduct[i][j], 

                                   minProduct[p][j-1]*ability[i]); 

                        minProduct[i][j] = Math.min(minProduct[i][j], 

                                   maxProduct[p][j-1]*ability[i]); 

                    } 

                } 

              max = Math.max(max, maxProduct[i][k-1]); 

            } 

             

            return max;
/********* End *********/
             

        }

    }
    

	

