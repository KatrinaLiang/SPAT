package step1;

import java.util.NoSuchElementException;

/**
6. * Created by sykus on 2018/1/26.
7. */
public class MyStack<T> {
    private T[] S;
    private int top;//栈顶元素下标，初始为-1

    public MyStack() {
        this(1);
    }

   public MyStack(int capacity) {
        S = (T[]) new Object[capacity];
        top = -1;
    }


    /**
23.     * 入栈操作，把item压入栈中
24.     *
25.     * @param item
26.     */
    public void push(T item) {

       int len = S.length;
        if (top == len - 1) {
           resize(2 * len);
       }
       /********** Begin *********/

        S[++top] = item;

        /********** End *********/
    }


    /**
42.     * 返回栈顶元素并从栈中移除
43.     *
44.     * @return
45.     */
    public T pop() {
        if (isEmpty()) {
           throw new NoSuchElementException("栈为空！");
       }
        /********** Begin *********/

        T val = S[top--];
       return val;

        /********** End *********/
    }

    /**
59.     * 判断栈是否为空
60.     *
61.     * @return
62.     */
    public boolean isEmpty() {
        if (top < 0)
            return true;
        else
            return false;
    }

   /**
71.     * 动态扩展数组大小
72.     *
73.     * @param capacity
74.     */
    private void resize(int capacity) {
        assert capacity > top;
        T[] tmp = (T[]) new Object[capacity];
        for (int i = 0; i <= top; i++) {
            tmp[i] = S[i];
        }
       S = tmp;
    }
}
