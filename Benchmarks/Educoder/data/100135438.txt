package case5;

public class abstractTest {
	public static void main(String[] args) {
		/********* begin *********/
		// 分别实例化Student类与Worker类的对象，并调用各自构造方法初始化类属性。
		Student a=new Student();
        Worker b=new Worker();
        
		// 分别调用各自类中被复写的talk()方法 打印信息。
		a.talk();
        b.talk();
		/********* end *********/
		
	}
}

// 声明一个名为Person的抽象类，在Person中声明了三个属性name age occupation和一个抽象方法——talk()。
abstract class Person {
	/********* begin *********/
	String name="王五";
    int age=40;
    String occupation="老师";
    abstract  void talk();
	/********* end *********/
}

// Student类继承自Person类，添加带三个参数的构造方法，复写talk()方法 返回姓名、年龄和职业信息
class Student extends Person {
	/********* begin *********/
    public Student(){
		super.name="张三";
        super.age=20;
        super.occupation="学生";
    }
	public void talk(){
        System.out.println(super.occupation+"——>姓名："+super.name+"，年龄："+super.age+"，职业："+super.occupation+"！");
    }
	/********* end *********/
}

// Worker类继承自Person类，添加带三个参数的构造方法，复写talk()方法 返回姓名、年龄和职业信息
class Worker extends Person {
	/********* begin *********/
    public Worker(){
		super.name="李四";
        super.age=30;
        super.occupation="工人";
    }
	public void talk(){
        System.out.println(super.occupation+"——>姓名："+super.name+"，年龄："+super.age+"，职业："+super.occupation+"！");
    }
	/********* end *********/

}