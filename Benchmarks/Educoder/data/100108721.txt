package step4;

import java.util.NoSuchElementException;

/**
 * Created by sykus on 2017/12/29.
 */
public class MyQueue<E> {

    private Node<E> head;//头结点
    private Node<E> top;//栈顶
    private int size;//栈中元素个数

    public MyQueue() {
        head = new Node<E>();
        head.next = null;
        top = null;//栈顶初始化为null
        size = 0;
    }

    /**
     * 把item压入栈中
     *
     * @param item
     */
    public void enqueue(E item) {
        /********** Begin *********/
        if(head.next==null)
        {
            Node<E> a=new Node<E>();
            E b=item;
            a.item=b;
            head.next=a;
            a.next=null;
            size++;
        }
        else
        {
            Node<E> a=new Node<E>();
            E c=item;
            a.item=c;
            a.next=head.next;
            head.next=a;
            size++;
        }



        /********** End *********/
    }

    /**
     * 返回它栈顶元素并删除
     */
    public E dequeue() {
        if (isEmpty())
            throw new NoSuchElementException("栈为空！");

        /********** Begin *********/
        Node<E> a=head;
        for(int i=0;i<size-1;i++)
            a=a.next;
        Node<E> b=a.next;
        a.next=null;
        size--;
        return b.item;
        



        /********** End *********/
    }

    /**
     * 返回栈中元素个数
     *
     * @return
     */
    public int size() {
        return size;
    }

    /**
     * 判断一个栈是否为空
     *
     * @return
     */
    public boolean  isEmpty() {
        if (head != null)
            return false;
        else
            return true;
    }

    //链表结点内部类
    private static class Node<E> {
        private E item;
        private Node<E> next;
    }
}

