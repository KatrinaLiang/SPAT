package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
		ThreadCallable cts=new ThreadCallable(num);
        FutureTask<Integer>ft=new FutureTask<>(cts);
        
        new Thread(ft,"有返回的线程值").start();
        
        try{
        	System.out.println("线程的返回值为："+ft.get());
        }catch(Exception e){
        	e.printStackTrace();
        }


	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable implements Callable<Integer>   {
	int num;
    ThreadCallable(){}
    ThreadCallable(int num){this.num=num;}
	public Integer call() throws Exception{
    	Integer []arr=new Integer[30];
        int i;
        arr[1]=1;
        arr[2]=1;
        
        for(i=3;i<30;i++){
        	arr[i]=arr[i-1]+arr[i-2];
           
        }
        return arr[num];
    }


}
