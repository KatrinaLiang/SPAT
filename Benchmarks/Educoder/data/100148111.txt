import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;

import com.csvreader.CsvReader;
import com.csvreader.CsvWriter;

/*********************数据说明***********************
* 训练数据：src/step1/input/train.csv
* 测试数据：src/step1/input/test.csv
* 结果文件：src/step1/ground_truth/test_prediction.csv
****************************************************/
public class Task {
    
    public static void main(String[] args) throws IOException {
        /********* Begin *********/
         Task t = new Task();
        List<String[]> train=t.getListFromCsv("src/step1/input/train.csv");
        List<String[]> test=t.getListFromCsv("src/step1/input/test.csv");
        List<String> ids = new ArrayList<>();
        List<String> data= new ArrayList<>();
        
        for(int i=0;i<test.size()-1;i++) 
        {
            String[] s = test.get(i);
            ids.add(s[0]);
            List<Integer> id = new ArrayList<>();
        List<Integer> dat= new ArrayList<>();
            for(int j = 0;j<train.size();j++)
            {
                String[] sh = train.get(j);
                int n = 0;
                for(int k = 1;k<s.length-1;k++) 
                {
                    double num1 = Double.valueOf(s[k]);
                    double num2 = Double.valueOf(sh[k]);
                    if( num1-num2>-20 || num1-num2 <20 || s[k].equals(sh[k])) 
                    {
                        n++;
                    }
                }
                id.add(j);
                dat.add(n);
                
            }
            int max =dat.get(0);
            int y = 0;
            for(int f = 1;f<dat.size();f++) 
            {
                if(max<dat.get(f)) {
                    y=f;
                    max=dat.get(f);
                }
            }
            String sr[] = train.get(id.get(y));
            double asd = Double.valueOf(sr[sr.length-1]);
            if(max ==73) 
            {
                asd=asd;
            }
            else if(max>60 && max <73) 
            {
                asd=asd*0.9;
            }else if(max>50 && max<=60)
            {
                asd=asd*0.76;
            }
            else if(max>40 && max<=50)
            {
                asd=asd*0.55;
            }
            else if(max>30 && max<=40)
            {
                asd=0.42;
            }
            else if(max>20 && max<=30)
            {
                asd=0.3;
            }
           
            else if(max>10 && max<=20)
            {
                asd=0.20;
            }
            else if(max>0 && max<=10) 
            {
                asd=0.1;
            }
             data.add(String.valueOf(asd));    
        }
                
           
    
        t. writeCsvFile("src/step1/ground_truth/test_prediction.csv", ids, data);

        /********* End *********/
    }
    
    
    /**
     * 读取csv文件
     * 
     * @param path 文件路径
     * @return 用户的集合
     * @throws IOException
     */
    public static List<String[]> getListFromCsv(String path) throws IOException {
        List<String[]> info = new ArrayList<>();
        try {
            // 创建CSV读对象   需要设置编码格式为UTF-8
            CsvReader csvReader = new CsvReader(new FileInputStream(new File(path)),',',Charset.forName("UTF-8"));
            // 读表头
            boolean readHeaders = csvReader.readHeaders();
            
            
            while (csvReader.readRecord()) {
                
                info.add(csvReader.getValues());
                }       
            csvReader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return info;
    }
    
    /**
     * 写结果文件
     * 
     * @param filePath 文件路径
     * @param data 要写入的数据
     * @throws IOException
     */
    public static void writeCsvFile(String filePath, List<String> ids,List<String> data) throws IOException {
        // 创建CSV写对象
        CsvWriter csvWriter = new CsvWriter(filePath, ',', Charset.forName("UTF-8"));
        // CsvWriter csvWriter = new CsvWriter(filePath);
        // 写表头
        String[] headers = {"ID","TARGET"};
        csvWriter.writeRecord(headers);
        //循环写数据
        for(int i = 0 ;i < ids.size();i++){
            String[] content = {ids.get(i), data.get(i)};
            csvWriter.writeRecord(content);
        }
        csvWriter.close();
    }
    
    
}
