package step2;

import java.text.ParseException;
import java.text.SimpleDateFormat; 
import java.util.Date; 
import java.util.InputMismatchException;
import java.util.Scanner;

public class DateExceptionTest {

    public static void main(String[] args) {
        
        Date newdate;
        Scanner s=new Scanner(System.in);
        int year,month,day;
        try{
            year=s.nextInt();
            month=s.nextInt();
            day=s.nextInt();

            DateException de=new DateException(year,month,day);
            newdate=de.getDate();
            SimpleDateFormat sdf1=new SimpleDateFormat("yyyy-mm-dd");
            System.out.println(sdf1.format(newdate)); 
        }        
        catch(InputMismatchException e){
            System.out.println(e.toString()+":请输入整数");
        }
        catch(DateException e){
            System.out.println(e.toString());
        }
        catch(ParseException e){
            System.out.println(e.toString()+":数据错误，无法转换成日期");
        }
        catch(Exception e){
            e.printStackTrace();
        }

    }

}
class DateException extends Exception{
    private int year;
    private int month;
    private int day;

    public DateException(String s){
        super(s);
    }    
    public DateException(int year,int month,int day) throws DateException{

        if(year<1900 || year>2100)
            throw new DateException("年份必须在1900到2100之间"); 
        if(month<1 || month>12)
            throw new DateException("月份必须在1到12之间");
        if(day<1 || day>31)
            throw new DateException("日期必须在1到31之间");

        //在满足以上条件下，进一步验证特殊情况
        switch(month){
            case 2:
                if((year%4==0&&year%100!=0)||year%400==0){
                    if(day>=30){
                        throw new DateException("该月只有29天");
                    }
                }else {                        
                    if(day>=29)throw new DateException("该月只有28天"); 
                }
                break;            
            case 4:
            case 6:
            case 9:
            case 11:
                if(day==31)throw new DateException("该月不能出现31天");
                break;
        }

        this.year=year;
        this.month=month;
        this.day=day;        
    }

    public Date getDate()throws ParseException{
        String strDate=this.year+"-"+this.month+"-"+this.day;
        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-mm-dd");  
        Date date = sdf.parse(strDate);          
        return date;
    }
}
