package step2;
import java.io.IOException;
import java.util.Scanner;
import java.util.Stack;
public class Task {
    Stack<Integer>st=new Stack<Integer>();
	public void dfs(int[][]a,int[]visited,int v) {
		st.push(v);
		visited[v]=1;
		for(int i=0;i<visited.length;i++) {
			if(a[v][i]==1&&visited[i]!=1) {
				visited[i]=1;
				st.push(i);
				dfs(a,visited,st.pop());
			}else {
				continue;
			}
			}
		if(!st.isEmpty())st.pop();
		if(st.isEmpty())return;
		else {
			
			dfs(a,visited,st.pop());
		}
	}
	public int virusArea(int n,int m,char[][] area){
		/********* Begin *********/
Task ta=new Task();
		int num=0;
		int part=0;
		int [][]k=new int[n][m];
      for(int i=0;i<n;i++) {
    	  for(int j=0;j<m;j++) {
    		  if(area[i][j]=='o') {
    			  num++;
    			  k[i][j]=num;
    		  }
    	  }
      }
      int visited[]=new int[num];
      int[][]con=new int [num][num];
       for(int i=0;i<n;i++) {
    	  for(int j=0;j<m;j++) {
    		  if(i<n-1&&j<m-1) {
    			  if(k[i][j]!=0&&k[i+1][j]!=0) {
    			  con[k[i][j]-1][k[i+1][j]-1]=1;
    			  con[k[i+1][j]-1][k[i][j]-1]=1;
    		  }
    		  if(k[i][j]!=0&&k[i][j+1]!=0) {
    			  con[k[i][j]-1][k[i][j+1]-1]=1;
    			  con[k[i][j+1]-1][k[i][j]-1]=1;
    		  }
    		  }
    		  if(i==n-1&&j<m-1) {
    			  if(k[i][j]!=0&&k[i][j+1]!=0) {
        			  con[k[i][j]-1][k[i][j+1]-1]=1;
        			  con[k[i][j+1]-1][k[i][j]-1]=1;
        		  }
    		  }
    		  if(j==m-1&&i<n-1) {
    			  if(k[i][j]!=0&&k[i+1][j]!=0) {
        			  con[k[i][j]-1][k[i+1][j]-1]=1;
        			  con[k[i+1][j]-1][k[i][j]-1]=1;
        		  }
    		  }
    	  } 
      }
      for(int i=0;i<visited.length;i++) {
    	  if(visited[i]==0) {
    		  part++;
    		  ta.dfs(con, visited, i);
    	  }
      }
		return part;
		
		/********* End *********/	
	}
    public static void main(String[] args) throws IOException {
	int m,n;
	Scanner sc=new Scanner(System.in);
	n=sc.nextInt();
	m=sc.nextInt();
	String[] s=new String[n];
	char[][]area=new char[n][m];
	for(int i=0;i<n;i++)s[i]=sc.next();
	for(int i=0;i<n;i++) {
		for(int j=0;j<m;j++)area[i][j]=s[i].charAt(j);
	}
	Task t=new Task();
	System.out.println(t.virusArea(n, m, area));
	
}
}
