package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
        ThreadCallable cts = new ThreadCallable();
        cts.num = num;
        // 接收
        FutureTask<Integer> ft = new FutureTask<>(cts);
        new Thread(ft,"").start();
 		
		try {
        	System.out.println("线程的返回值为：" + ft.get());
		} catch (Exception e) {
            
		}
	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable  implements Callable<Integer>{
	int num;
  	
    @Override
	public Integer call() throws Exception{
		int x = 0;
		int y = 1;
		int z = 0;
		for (int i =1; i < this.num; i++) {
			z = y;
			y = x + y;
			x = z;
		}
		return y;
	}
}

