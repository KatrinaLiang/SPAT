package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
		ThreadCallable c = new ThreadCallable(num);
	FutureTask<Integer> ft = new FutureTask<>(c);
	new Thread(ft).start();
        try {
            System.out.println("线程的返回值为：" + ft.get());
        } catch (Exception e) {
            e.printStackTrace();
        }
	}

}

/* 在这里实现Callable接口及方法 */
class ThreadCallable  implements Callable<Integer>    {
    private int num = 0;
    public ThreadCallable(int num){this.num = num;}
    public ThreadCallable(){}
 public Integer call() throws Exception {
        int i = 1;
      	int a= 1;
     int b=1;
     for(int j=3;j<=num;j++){
     i=a+b;
         a=b;
         b=i;
     }
        return i;
    }



}