package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
            ThreadCallable cts=new ThreadCallable();
            FutureTask<Integer> ft=new FutureTask<>(cts);
            Integer b=num;
        
            new Thread(ft,b.toString()).start();
            try{
                System.out.println("线程的返回值为："+ft.get());
            }catch(Exception e){
                e.printStackTrace();
            }
	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable implements Callable<Integer>{
    public Integer call() throws Exception{
        int i=1;
        Integer d=new Integer(Thread.currentThread().getName());
        int a[]=new int[50];
        
        for(;i<50;i++)
        { 
            if(i<3)
            {
                a[i]=1;
             //   System.out.println(Thread.currentThread().getName()+""+i);
                
            }
            else
            {
                a[i]=a[i-1]+a[i-2];
               // System.out.println(Thread.currentThread().getName()+""+i);
                
            }
        }
        return a[d];
    }
}
