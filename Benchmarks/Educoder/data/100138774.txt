package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {
	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
        ThreadCallable callable = new ThreadCallable();
     callable.Cl(num);
	 FutureTask<Integer> ft = new FutureTask<>(callable);
     new Thread(ft).start();
        try {
            new Thread(ft).join();
        } catch (Exception e) {
            e.printStackTrace();
        }
	  try {
            System.out.println("线程的返回值为：" + ft.get());
        } catch (Exception e) {
            e.printStackTrace();
        }
	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable implements Callable<Integer>   {
       private int num;
       public static int a=1;
       public static int b=1;
       public static int c=1;
       public int result;
    public void Cl (int num) {
        this.num = num;
    }
  public Integer call() throws Exception {
		  if(num == 1 || num == 2)
		   {
		    c = 1;
		   }
		   else 
		   {
             for(int i=0;i<num-2;i++)
	          {
			 c=a+b;
			 a=b;
			 b=c;
             }
		 }
        result = c;
        return result;
   
        }
        



}
