package step4;
import java.util.Scanner;
import java.util.LinkedList;
public class Josephus {

   public static void main(String args[]){
	   /**
		* 数组解决约瑟夫环问题
		* @param total   总人数（如41）
		* @param number  要报的数（如3）
		* Josecount()算法，显示最后一个的编号
		*/
		   int total,number;
		   Scanner scan=new Scanner(System.in);
		   total=scan.nextInt();  //输入参与游戏的总人数
		   number=scan.nextInt(); //输入要报的数字
	       Josecount(total,number);

   }
    
	public static void Josecount(int personNumber ,int number) { //显示最后那个人的原始编号
		    //显示最后那个人的原始编号
        	int k=0;//最后一人编号
        	int[] persons = new int[personNumber]; //建立数组，存放所有人的原始编号，从1开始.....personNumber最后一人
        	for (int i = 0; i < personNumber; i++) {
            	persons[i] = i+1;
        	}
	 
	        /*************begin***************/
			   //使用LinkedList
        LinkedList<Integer> list = new LinkedList<>();
        for (int i = 0; i < persons.length; i++) {
            list.add(persons[i]);
        }
        int i = number % list.size();         //i记录退出元素的位置
        while (list.size() > 1) {
            if (i != 0) {
                list.remove(--i); //因remove一个元素后，size-1，所以取--i
            }
            else{
                list.remove(list.size()-1);
            }
            i = (i + number) % list.size();//下一个i与此i之间间隔number个元素
        }
        k = list.get(0);
        System.out.print("最后一个人编号："+k);
	}
	        /*************end***************/
}


