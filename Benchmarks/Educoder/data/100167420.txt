package jdbcTest;

import jdbc.jdbcTransaction;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class Test3 {
    public static void main(String[] args) {
        boolean task = task();
        if (task) {
            test();
        } else {
            System.out.println("请按照要求编写代码！");
        }
    }

    private static void test() {
        try {
            Class.forName("com.mysql.jdbc.Driver" );
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        Connection conn = null;
        PreparedStatement statement = null;
        String url = "jdbc:mysql://localhost:3306";
        String user = "root";
        String password = "123123";
        try {
            conn = DriverManager.getConnection (url,user,password );
            statement = conn.prepareStatement("drop database if exists mysql_db");
            statement.executeUpdate();
            statement = conn.prepareStatement("create database mysql_db");
            statement.executeUpdate();
            statement = conn.prepareStatement("use mysql_db");
            statement.executeUpdate();
            String sql = "create table student(" +
                    "id int primary key  not null, " +
                    "name varchar(20), " +
                    "sex varchar(4), " +
                    "age int" +
                    ")";
            statement = conn.prepareStatement(sql);
            statement.executeUpdate();
            statement = conn.prepareStatement("insert into student(id,name,sex,age) values(?,?,?,?)");
            statement.setInt(1,1);
            statement.setString(2, "张三");
            statement.setString(3, "男");
            statement.setInt(4, 19);
            statement.executeUpdate();
            statement = conn.prepareStatement("insert into student(id,name,sex,age) values(?,?,?,?)");
            statement.setInt(1,2);
            statement.setString(2, "李四");
            statement.setString(3, "女");
            statement.setInt(4, 18);
            statement.executeUpdate();
            statement = conn.prepareStatement("insert into student(id,name,sex,age) values(?,?,?,?)");
            statement.setInt(1,3);
            statement.setString(2, "王五");
            statement.setString(3, "男");
            statement.setInt(4, 20);
            statement.executeUpdate();
            jdbcTransaction.transaction();
            statement = conn.prepareStatement("select * from student");
            ResultSet resultSet = statement.executeQuery();
            while (resultSet.next()) {
                int id = resultSet.getInt(1);
                String name = resultSet.getString("name");
                String sex = resultSet.getString("sex");
                int age = resultSet.getInt("age");
                System.out.println(id + " " + name + " " + sex + " " + age);
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        finally {
            try {
                if(statement!=null)
                    statement.close();
                if(conn!=null)
                    conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private static boolean task() {
        boolean flag = false;
        try {
            String filePath=System.getProperty("user.dir");
            FileReader fr = new FileReader(filePath+"/src/jdbc/jdbcTransaction.java");
            StringBuilder sb = new StringBuilder();
            char[] c = new char[1024];
            int len = 0;
            while( (len = fr.read(c)) != -1){
                sb.append(c, 0, len);
            }
            String str = sb.toString().trim();
            flag = succeed(str);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return flag;
    }

    public static boolean succeed(String str) {
        if(str=="" || str.length()==0 || str==null){
            return false;
        }
        boolean flag=true;
        List<Boolean> isture = new ArrayList<Boolean>();
        isture.add(str.contains("conn.setAutoCommit(false)"));
        isture.add(str.contains("insert into student(id,name,sex,age) values(4,'赵六','女',21)"));
        isture.add(str.contains("conn.commit()"));
        isture.add(str.contains("conn.rollback()"));
        for (int i = 0; i < isture.size(); i++) {
            if (!isture.get(i))
                flag = false;
        }
        return flag;
    }
}
