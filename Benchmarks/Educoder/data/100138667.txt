package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
		ThreadCallable b = new ThreadCallable();
		b.setNum(num);
		FutureTask<Integer> c = new FutureTask<>(b);
		new Thread(c).start();
		try {
			System.out.println("线程的返回值为：" + c.get());
			
		}catch(Exception e) {
			e.printStackTrace();
		}

	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable implements Callable<Integer>   {
	private int num;
	public void setNum(int num) {
		this.num = num;
	}
	public Integer call() throws Exception{
		int[] a = new int[1000];
		a[2] = 1; 
		a[1] = 1;
		for(int i = 3; i <= num; i++) {
			a[i] = a[i - 1] + a[i - 2];
		}
		return a[num];
	}
}

