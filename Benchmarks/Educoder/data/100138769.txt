package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
	Callable<Integer> ca = new ThreadCallable(num);

    FutureTask<Integer> ft = new FutureTask<>(ca);

    new Thread(ft).start();

    try{
        Integer k = ft.get();
        System.out.println("线程的返回值为：" + k);


    }catch(Exception e){
        e.printStackTrace();
    }

	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable   implements Callable {

        private int num = 0;

        public ThreadCallable(){}

        public ThreadCallable(int num){

            this.num = num;

        }

        public Integer call() throws Exception{

            int[] shu = new int[2];
            shu[1] = 1;
            shu[0] = 1;

            for(int i = 2 ; i < num ; i++){

                int t = shu[1];
                shu[1] = shu[1]+shu[0];
                shu[0] = t;
            }
            return shu[1];
        }
        
}
