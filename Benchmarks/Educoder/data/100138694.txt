package step2;

import java.util.concurrent.Callable;
import java.util.concurrent.FutureTask;

public class Task {

	public void runThread(int num) {
		// 在这里开启线程 获取线程执行的结果
	
        ThreadCallable tc = new ThreadCallable();
        tc.n=num;
        FutureTask<Integer> ft = new FutureTask<>(tc);
        new Thread(ft, "线程的返回值为：").start();
       try {
            //System.out.println("子线程的返回值：" + ft.get());
           System.out.println( "线程的返回值为："+ ft.get());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
		

	}
}

/* 在这里实现Callable接口及方法 */
class ThreadCallable  implements Callable<Integer> {
   		int n=0;
		public Integer call() throws Exception{
            
    	
        int first = 1;
		int second = 1;
		int  result = 0 ;
	
		if(n==1 || n==2){
			return 1;
		}
		for (int i = 1; i < n - 1; i++) {
			result = first + second;
			first = second;
			second =result;
             
		}
            
		return result;

        }



}
