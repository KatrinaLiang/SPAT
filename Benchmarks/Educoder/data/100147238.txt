package step2;

public class BestTeam {

	/********* Begin *********/

    public Long getBestTeam(int numbers, int[] abilities, int selectedNum, int distance){
	    long dpMax[][] = new long[numbers][selectedNum];
        long dpMin[][] = new long[numbers][selectedNum];
      
        for (int i = 0; i < numbers; i++) {
     		abilities[i] = abilities[i+1];
            dpMax[i][0] = abilities[i];
            dpMin[i][0] = abilities[i];
        }

        long MAX = Long.MIN_VALUE;
        for (int j = 1; j < selectedNum; j++) {
            for (int i = j ; i < numbers; i++) {
            
                dpMax[i][j] = Long.MIN_VALUE;
                dpMin[i][j] = Long.MAX_VALUE;
                for (int x = 1; x <= distance && (i - x) >= j - 1; x++) {
                   
                    long resMax = Math.max(dpMax[i - x][j - 1] * abilities[i], dpMin[i - x][j - 1] * abilities[i]);
                    long resMin = Math.min(dpMax[i - x][j - 1] * abilities[i], dpMin[i - x][j - 1] * abilities[i]);

                    if (resMax > dpMax[i][j])
                        dpMax[i][j] = resMax;
                    if (resMin < dpMin[i][j])
                        dpMin[i][j] = resMin;

                }
            }
        }
      
        for (int i = selectedNum-1; i < numbers; i++) {
            if (dpMax[i][selectedNum-1] > MAX) {
                MAX = dpMax[i][selectedNum-1];
            }
        }
        return MAX;
    }

	/********* End *********/
}
