package step4;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class Task {
	public volatile int inc = 0;
	
//请在此添加实现代码
/********** Begin **********/
	public void increase() {
		
		inc++;
	}


/********** End **********/

	public static void main(String[] args) {
		Lock lock = new ReentrantLock();
		final Task test = new Task();
		for (int i = 0; i < 10; i++) {
			new Thread() {
				public void run() {
				try{
					lock.lock();
					for (int j = 0; j < 1000; j++){
							test.increase();
					}
				}catch(Exception e){

				}finally{
					lock.unlock();
					
				}
		
					
				};
			}.start();
		}
		while (Thread.activeCount() > 1) // 保证前面的线程都执行完
			Thread.yield();
		System.out.println(test.inc);
	}
}
