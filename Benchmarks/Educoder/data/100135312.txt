package case5;

public class abstractTest {
	public static void main(String[] args) {
		/********* begin *********/
		// 分别实例化Student类与Worker类的对象，并调用各自构造方法初始化类属性。
		Student s=new Student();
        Worker w=new Worker();
        s.setname("张三");
        s.setage(20);
        s.setoccupation("学生");
        w.setname("李四");
        w.setage(30);
        w.setoccupation("工人");
		// 分别调用各自类中被复写的talk()方法 打印信息。
		s.talk();
        w.talk();
		/********* end *********/
		
	}
}

// 声明一个名为Person的抽象类，在Person中声明了三个属性name age occupation和一个抽象方法——talk()。
abstract class Person {
	/********* begin *********/
	public String name;
    public int age;
    public String occupation;
    public String getoccupation()
    {
        return occupation;
    }
    public void setoccupation(String occupation)
    {
        this.occupation=occupation;
    }
    public String getname()
    {
        return name;
    }
    public void setname(String name)
    {
        this.name=name;
    }
    public int getage()
    {
        return age;
    }
    public void setage(int age)
    {
        this.age=age;
    }
	/********* end *********/
}

// Student类继承自Person类，添加带三个参数的构造方法，复写talk()方法 返回姓名、年龄和职业信息
class Student extends Person {
	/********* begin *********/
	public void talk()
    {
        System.out.println(this.occupation+"——>姓名："+this.name+"，年龄："+this.age+"，职业："+this.occupation+"！");
    }
	/********* end *********/
}

// Worker类继承自Person类，添加带三个参数的构造方法，复写talk()方法 返回姓名、年龄和职业信息
class Worker extends Person {
	/********* begin *********/
	public void talk()
    {
        System.out.println(this.occupation+"——>姓名："+this.name+"，年龄："+this.age+"，职业："+this.occupation+"！");
    }
	/********* end *********/

}