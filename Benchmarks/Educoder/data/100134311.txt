package case8;

public class TestPolymorphism {
	public static void main(String[] args) {
		// 以多态方式分别实例化子类对象并调用eat()方法
		/********* begin *********/
		show(new Cat());
        show(new Dog());
        show(new Lion());
        
		/********* end *********/
	}
    public static void show(Animal a) {
        if(a instanceof Cat) {
            Cat c = (Cat)a;
            c.eat();
        }
        else if(a instanceof Dog) {
            Dog c = (Dog)a;
            c.eat();
        }
        else if(a instanceof Lion) {
            Lion c = (Lion)a;
            c.eat();
        }
        
    }
}

// Animal类中定义eat()方法
class Animal {
	/********* begin *********/
void eat() {
    System.out.println("I don't know");
}
	/********* end *********/
}

// Dog类继承Animal类 复写eat()方法
class Dog extends Animal {
	/********* begin *********/
void eat() {
    System.out.println("eating rat...");
}
	/********* end *********/
}

// Cat类继承Animal类 复写eat()方法
class Cat extends Animal {
	/********* begin *********/
	void eat() {
    System.out.println("eating bread...");
}
	/********* end *********/
}

// Lion类继承Animal类 复写eat()方法
class Lion extends Animal {
	/********* begin *********/
	void eat() {
    System.out.println("eating meat...");
}
	/********* end *********/
}
