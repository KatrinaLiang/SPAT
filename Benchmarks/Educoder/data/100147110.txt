package step2;

public class BestTeam {

	/********* Begin *********/

public long getBestTeam(int numbers, int[] abilities, int selectedNum, int distance) {
		long[][] dp_max = new long[numbers + 1][selectedNum + 1];
		long[][] dp_min = new long[numbers + 1][selectedNum + 1];
		for (int i = 1; i <= numbers; ++i)
			for (int j = 1; j <= selectedNum; ++j) {
				dp_max[i][j] = 1;
				dp_min[i][j] = 1;
			}
		long res = Long.MIN_VALUE;// 最终结果
		for (int i = 1; i <= numbers; ++i) {
			dp_max[i][1] = abilities[i];
			dp_min[i][1] = abilities[i];
			for (int k = 2; k <= selectedNum; ++k)
				for (int j = i - 1; j > 0 && i - j <= distance; --j) {
					dp_max[i][k] = Math.max(dp_max[i][k],
							Math.max(dp_max[j][k - 1] * abilities[i], dp_min[j][k - 1] * abilities[i]));
					dp_min[i][k] = Math.min(dp_min[i][k],
							Math.min(dp_max[j][k - 1] * abilities[i], dp_min[j][k - 1] * abilities[i]));
				}
			res = Math.max(res, dp_max[i][selectedNum]);
		}
		return res;
	}
	/********* End *********/
}
