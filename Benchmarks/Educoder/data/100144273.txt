package step4;

import java.io.File;
import java.io.FileFilter;

public class Task {
  public void showDirStructure(File file)	{
      System.out.println("+--"+file.getName());
	  getFile(file,1);
	}
           
  /****递归输出方法*****/
  public void getFile(File file,int deep) {
	  File[] files = file.listFiles(new MyFilter()); //调用过滤器
	  for(File temp:files) {    //循环遍历此文件夹
		  
	  if(temp.isDirectory()) {      //如果是文件夹
		  System.out.println(printfSpace(deep)+"+--"+temp.getName());
		  getFile(temp,deep+1);    //递归 深度+1
	  }
	  else{
		  System.out.println(printfSpace(deep)+"--"+temp.getName());
	  }
	 }
  }
        /********输出空格方法**********/
  public String printfSpace(int deep) {
	  String str="";
	  for(int i=0;i<deep;i++) {
		  str+="  ";
	  }
	  return str;
  }
}

      /************文件过滤器类*************/
class MyFilter implements FileFilter{  

	public boolean accept(File pathname) {
		if(pathname.isDirectory()) {   //文件夹返回true
			return true;
		}
		else { //文件需要判断后缀
		boolean a=pathname.getName().endsWith(".jpg");
		boolean b=pathname.getName().endsWith(".png");
		boolean c=pathname.getName().endsWith(".bmp");
		return a||b||c;
		}
	}
	
}

